#define __PROG_TYPES_COMPAT__ 
#include <avr/pgmspace.h>
/**
 * Bit map for the display Hacklab Turku made
 * LOW bit means led on.
 *
 *        FD
 *       ----
 *     |      |
 *  7F |      | FB
 *     |  BF  |
 *       ----
 *     |      |
 *  DF |      | F7
 *     |      |
 *       ----
 *        EF
 *
 */
const prog_uchar asciitable_7seg_map[] PROGMEM =
{
    0xff, //ASCII null, keep separate so that the groups of 8 below make looking up codes by decimal value sane
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 

    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0x41, 
    0xf3, 0x89, 0xa1, 0x33, 0x25, 0x07, 0x71, 0x01, // ASCII numbers 1-8
    0x31, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,

    // TODO: Map (rest of) A-Z (those possible)
    0x10, 0xff, 0x4d, 0xff, 0x0d, 0x1d, 0xff, 0x12, // A-H
    0xff, 0xff, 0xff, 0x4f, 0xff, 0xff, 0x41, 0x19, // I-P
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // Q-X
    0xff, 0xff, 0x4d, 0xff, 0xe1, 0xff, 0xef, 0xff, 

    // TODO: Map (rest of) a-z (those possible)
    0x81, 0x07, 0x8f, 0x83, 0x09, 0x1d, 0x21, 0x17, // a-h
    0xff, 0xff, 0xff, 0x5f, 0xff, 0xff, 0x87, 0x19, // i-p
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // q-x
};


inline uint8_t ascii_to_7seg(uint8_t val)
{
    if (val > sizeof(asciitable_7seg_map))
    {
        // All off for invalid value
        return 0xff;
    }
    return pgm_read_byte_near(asciitable_7seg_map + val);
}

